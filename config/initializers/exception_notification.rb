# frozen_string_literal: true

# Move this require to your `config/application.rb` if you want to be notified from runner commands too.
require 'rake'
require 'exception_notification/rails'
require 'exception_notification/rake'

ExceptionNotification.configure do |config|
  # Ignore additional exception types. The default list of exception classes is:
  #   ActiveRecord::RecordNotFound Mongoid::Errors::DocumentNotFound AbstractController::ActionNotFound
  #   ActionController::RoutingError ActionController::UnknownFormat ActionController::UrlGenerationError
  #   ActionDispatch::Http::MimeNegotiation::InvalidType Rack::Utils::InvalidParameterError
  # config.ignored_exceptions += %w[ActionView::TemplateError CustomError]

  # Adds a condition to decide when an exception must be ignored or not.
  # The ignore_if method can be invoked multiple times to add extra conditions.
  config.ignore_if do |_exception, _options|
    !Rails.env.production?
  end

  # Ignore exceptions generated by crawlers
  # config.ignore_crawlers %w[Googlebot bingbot]

  # Notifiers =================================================================

  # Email notifier sends notifications by email.
  config.add_notifier :email, {
    sender_address: ENV.fetch('MAIL_FROM', nil),
    email_prefix: "[#{ENV.fetch('APP_HOST', nil)}] ",
    exception_recipients: ENV.fetch('EXCEPTION_RECIPIENTS', 'info@heimv.ch').split(',')
  }

  # Campfire notifier sends notifications to your Campfire room. Requires "tinder" gem.
  # config.add_notifier :campfire, {
  #   subdomain: "my_subdomain",
  #   token: "my_token",
  #   room_name: "my_room"
  # }

  # HipChat notifier sends notifications to your HipChat room. Requires "hipchat" gem.
  # config.add_notifier :hipchat, {
  #   api_token: "my_token",
  #   room_name: "my_room"
  # }

  # Webhook notifier sends notifications over HTTP protocol. Requires "httparty" gem.
  # config.add_notifier :webhook, {
  #   url: "http://example.com:5555/hubot/path",
  #   http_method: :post
  # }
end
