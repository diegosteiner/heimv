/ h3.my-2.text-center= Booking:.model_name.human
.row.mt-3
  .col
    = f.text_field :q
  .col 
    = f.select :concluded, %i[all inconcluded concluded].map { [t(it, scope: 'activerecord.enums.booking/filter.concluded'), it] }
.row
  .col
    = f.datetime_field :begins_at_after, include_blank: true
    = f.datetime_field :begins_at_before, include_blank: true
  .col
    = f.datetime_field :ends_at_after, include_blank: true
    = f.datetime_field :ends_at_before, include_blank: true
.row
  .col
    = f.collection_select :homes, current_organisation.homes, :id, :name, { include_blank: true }, multiple: true, size: 3
  .col
    = f.collection_select :occupiables, current_organisation.occupiables.ordered, :id, :name, { include_blank: true }, multiple: true, size: 3
.row
  - states = current_organisation.booking_flow_class.state_classes.map { |key, state| [state.t, key] }
  .col
    = f.select :current_booking_states, states, { include_blank: true }, multiple: true, size: 6
  .col
    = f.select :previous_booking_states, states, { include_blank: true }, multiple: true, size: 6

.row
  - categories = current_organisation.booking_categories.all.map { |category| [category.title, category.id] }
  .col
    = f.select :categories, categories, { include_blank: true }, multiple: true, size: 4
  .col
