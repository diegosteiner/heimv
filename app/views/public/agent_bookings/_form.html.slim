- url = @agent_booking.new_record? ? public_agent_bookings_path : public_agent_booking_path(@agent_booking.token || @agent_booking.to_param)
= form_with(model: [:public, @agent_booking], url: url) do |f|
  .card.shadow-sm[class=('bg-light' unless @agent_booking.booking_agent_responsible?)]
    .card-body
      - if @agent_booking.errors.any?
        .alert.alert-danger.d-flex
          .me-3
            i.fa.fa-exclamation-circle               
          - @agent_booking.errors.delete("booking.tenant.bookings")
          - @agent_booking.errors.delete("booking.agent_booking.tenant_email")
          - @agent_booking.errors.delete("booking.occupancies.base")
          = @agent_booking.errors.full_messages.to_sentence

      = f.fields_for :booking, (@agent_booking.booking || @agent_booking.build_booking) do |bf|
        h4.mt-0= Occupancy.model_name.human
        fieldset
          - if @agent_booking.booking.deadline
            .mb-3
              label=Booking.human_attribute_name(:deadline)
              div
                =<> l(@agent_booking.booking.deadline.at, format: :short)

        = render partial: 'public/occupiables/select', locals: { booking: @agent_booking.booking, form: bf, disabled: !@agent_booking.booking.editable }

        fieldset
          = react_component('calendar/CalendarFormField', label: Booking.human_attribute_name(:begins_at),
                                                      name: 'agent_booking[booking_attributes][begins_at]',
                                                      value: @agent_booking.booking.begins_at&.iso8601, 
                                                      disabled: !@agent_booking.booking.editable?, required: true,
                                                      invalidFeedback: @agent_booking.booking.errors[:begins_at]&.to_sentence)

          = react_component('calendar/CalendarFormField', label: Booking.human_attribute_name(:ends_at),
                                                      name: 'agent_booking[booking_attributes][ends_at]',
                                                      value: @agent_booking.booking.ends_at&.iso8601, 
                                                      disabled: !@agent_booking.booking.editable?, required: true,
                                                      invalidFeedback: @agent_booking.booking.errors[:ends_at]&.to_sentence)

        fieldset 
          h4= Tenant.model_name.human
          = f.email_field :tenant_email, required: false, disabled: !@agent_booking.booking_agent_responsible?, help: t('.tenant_email_help')
          = bf.text_field :tenant_organisation, required: false 
          = bf.text_field :purpose_description, required: false 
          = bf.text_area :remarks, required: false
          
      
      fieldset 
        h4= AgentBooking.model_name.human
        = f.text_field :booking_agent_code, disabled: !@agent_booking.booking_agent_responsible?
        = f.text_field :booking_agent_ref, required: false, disabled: !@agent_booking.booking_agent_responsible?

      .form-actions.pt-4.mt-3
        - if @agent_booking.booking_agent_responsible?
          =<> f.submit
        - if @agent_booking.booking&.booking_state.present?
          = render partial: 'manage/bookings/actions', locals: { actions: @agent_booking.booking.booking_state.public_actions, form: f }
