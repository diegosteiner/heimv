- url = @agent_booking.new_record? ? public_agent_bookings_path : public_agent_booking_path(@agent_booking.token || @agent_booking.to_param)
= form_with(model: [:public, @agent_booking], url: url) do |f|
  .card[class=('bg-light' unless @agent_booking.booking_agent_responsible?)]
    .card-body
      - errors = (@agent_booking.errors[:base])
      - if errors.present?
        .alert.alert-danger.d-flex
          .ms-3
            i.fa.fa-exclamation-circle               
          = errors.to_sentence
      fieldset
        - if @agent_booking.booking&.deadline
          .form-group
            label=Booking.human_attribute_name(:deadline)
            div
              =<> l(@agent_booking.booking.deadline.at, format: :short)

        = f.collection_select :home_id, current_organisation.homes, :id, :to_s, {}, disabled: !@agent_booking.booking_agent_responsible?
        = react_component('calendar/CalendarInput', label: Occupancy.human_attribute_name(:begins_at),
                                                    name: 'agent_booking[occupancy_attributes][begins_at]',
                                                    value: @agent_booking.occupancy.begins_at&.iso8601, 
                                                    disabled: !@agent_booking.booking.editable?, required: true,
                                                    invalidFeedback: @agent_booking.booking.errors['occupancy.begins_at']&.to_sentence)

        = react_component('calendar/CalendarInput', label: Occupancy.human_attribute_name(:ends_at),
                                                    name: 'agent_booking[occupancy_attributes][ends_at]',
                                                    value: @agent_booking.occupancy.ends_at&.iso8601, 
                                                    disabled: !@agent_booking.booking.editable?, required: true,
                                                    invalidFeedback: @agent_booking.booking.errors['occupancy.ends_at']&.to_sentence)

        = f.email_field :tenant_email, required: false, disabled: !@agent_booking.booking_agent_responsible?, help: t('.tenant_email_help')
        = f.text_field :booking_agent_code, disabled: !@agent_booking.booking_agent_responsible?
        = f.text_field :booking_agent_ref, required: false, disabled: !@agent_booking.booking_agent_responsible?

      .form-actions.pt-4.mt-3.border-top
        - if @agent_booking.booking_agent_responsible?
          =<> f.submit
        - if @agent_booking.booking&.booking_state.present?
          = render partial: 'manage/bookings/actions', locals: { actions: @agent_booking.booking.booking_state.public_actions, form: f }
