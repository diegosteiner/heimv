= form_with(model: [:public, @booking], local: true, disabled: !@booking.editable, html: { novalidate: true }) do |f|
  .card.[class=({'bg-light' => !@booking.editable, 'border-danger' => @booking.errors.any? }.select { _2 }.keys )]
    .card-body
      - if @booking.booking_state.t(:public_info).present?
        .alert.alert-info.d-flex
          .mr-3
            i.fa.fa-info-circle
          p.m-0= @booking.booking_state.t(:public_info)
      - if @booking.occupancy.begins_at < ENV.fetch('LAST_MINUTE_WARNING_DAYS', 10).to_i.days.from_now
        .alert.alert-warning.d-flex
          .mr-3
            i.fa.fa-exclamation-triangle
          p.m-0= t('.last_minute_warning')
      - if @booking.errors[:base].present?
        .alert.alert-danger.d-flex
          .mr-3
            i.fa.fa-exclamation-circle               
          = @booking.errors[:base].to_sentence
      fieldset
        - if @booking.deadline
          .form-group
            label=Booking.human_attribute_name(:deadline)
            div
              =<> l(@booking.deadline.at, format: :short)
        = f.select :home_id, homes_for_select, {}, disabled: true

        = react_component('calendar/CalendarInput', label: Occupancy.human_attribute_name(:begins_at),
                                                    name: 'booking[occupancy_attributes][begins_at]',
                                                    value: @booking.occupancy.begins_at&.iso8601,
                                                    disabled: @booking.timeframe_locked?, required: true,
                                                    invalidFeedback: @booking.errors['occupancy.begins_at']&.to_sentence)

        = react_component('calendar/CalendarInput', label: Occupancy.human_attribute_name(:ends_at),
                                                    name: 'booking[occupancy_attributes][ends_at]',
                                                    value: @booking.occupancy.ends_at&.iso8601,
                                                    disabled: @booking.timeframe_locked?, required: true,
                                                    invalidFeedback: @booking.errors['occupancy.ends_at']&.to_sentence)

        = f.email_field :email, disabled: @booking.email.present? || !@booking.editable
        = f.fields_for :tenant, @booking.tenant do |cf|

          .row
            .col
              = cf.text_field :first_name, disabled: !@booking.editable
            .col
              = cf.text_field :last_name, disabled: !@booking.editable

          = cf.text_area :street_address, disabled: !@booking.editable

          .row
            .col-md-4
              = cf.text_field :zipcode, disabled: !@booking.editable
            .col-md-8
              = cf.text_field :city, disabled: !@booking.editable

          = cf.form_group :country_code, label: { text: Tenant.human_attribute_name(:country_code) } do
            = cf.country_select :country_code, { default: "CH", priority_countries: %w[CH DE FR IT] }, class: 'form-control', disabled: !@booking.editable
          = cf.text_area :phone, rows: 2, disabled: !@booking.editable
          = cf.date_select :birth_date, use_two_digit_numbers: true, end_year: Time.zone.today.year - 100, start_year: Time.zone.today.year - 17, disabled: !@booking.editable, include_blank: true

      fieldset
        h5= t('.booking_details')
        = f.text_field :tenant_organisation, help: t('optional'), disabled: !@booking.editable
        = f.text_area :invoice_address, help: t('optional'), disabled: !@booking.editable
        = f.form_group :committed_request
          = f.label :committed_request, Booking.human_attribute_name(:committed_request)
          = f.radio_button(:committed_request, false, label: t(:'activerecord.enums.booking.committed_request.provisional_request'), disabled: (!@booking.editable || @booking.committed_request?))
          = f.radio_button :committed_request, true, label: t(:'activerecord.enums.booking.committed_request.definitive_request'), disabled: !@booking.editable
          - @booking.errors[:committed_request].each do |error|
            .invalid-feedback.d-block = error

        = f.collection_select :purpose_id, current_organisation.booking_purposes, :id, :title, { required: true }, disabled: !@booking.editable
        = f.number_field :approximate_headcount, disabled: !@booking.editable, required: true
        = f.text_area :remarks, help: t('optional'), disabled: !@booking.editable

      .form-actions.pt-4.mt-3.border-top
        - if @booking.editable
          =<> f.submit class: 'btn btn-primary'

        = render partial: 'manage/bookings/actions', locals: { actions: @booking.booking_state.public_actions, form: f }
