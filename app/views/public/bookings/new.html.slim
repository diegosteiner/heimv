= form_with(model: @booking, url: public_bookings_path, local: true) do |f|
  .mx-auto.w-md
    h3 = t(:'.title')
    .card.shadow-sm
      .card-body
        - if @booking.errors.any?
          .alert.alert-danger.d-flex
            .me-3
              i.fa.fa-exclamation-circle               
            - @booking.errors.delete("tenant.bookings")
            - @booking.errors.delete("occupancies.base")
            = @booking.errors.full_messages.to_sentence
        
        = image_tag current_organisation.logo, class: 'mx-auto d-block m-4', style: 'max-width: 180px; max-height: 180px;' if current_organisation&.logo.present?

        fieldset 
          = react_component('BookingOccupancyForm', { \ 
              org: current_organisation.slug, \
              booking: Public::BookingSerializer.render_as_hash(@booking), \
              namePrefix: 'booking', \ 
              required: true, \
              disabled: false, \
              defaultBeginsAtTime: current_organisation&.settings&.default_begins_at_time, \
              defaultEndsAtTime: current_organisation&.settings&.default_ends_at_time, \
              occupiableInvalidFeedback: @booking.errors.to_hash(true).slice(:occupiable_ids, :home_id).values.flatten.to_sentence, \
              occupancyInvalidFeedback: @booking.errors.to_hash(true).slice(:begins_at, :begins_at_time, :ends_at, :ends_at_time).values.flatten.to_sentence, \
              defaultView: current_user&.default_calendar_view || current_organisation&.settings&.default_calendar_view \
            }) 

          = f.email_field :email
          = f.hidden_field :locale, value: I18n.locale

        
        .form-actions.mt-3
          - conditions_html = { \
              privacy_policy: privacy_url(), \
              terms: current_organisation.designated_documents.where(designation: :terms).present? && public_designated_document_url(designation: :terms) \
            }.filter { _2.present? }.map { |key, url| t(".#{key}_condition_html", url:) }.to_sentence.html_safe
          = f.check_box :accept_conditions, required: true, label: t('.accept_conditions_html', conditions_html:)
          = f.submit t('.submit'), class: 'btn btn-primary btn-lg'

          - if current_organisation.booking_agents.any? 
            button.btn.btn-default.p-0.text-primary.d-block.mt-3#agent-booking-button
              = BookingAgent.model_name.human


  - if current_organisation.email.present?
    p.mt-3.text-center.small== t('.problems_html', email: current_organisation.email)

