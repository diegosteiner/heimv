= form_with(model: @booking, url: public_bookings_path, local: true) do |f|
  .mx-auto.w-md
    h3 = t(:'.title')
    .card
      .card-body
        - if @booking.errors.any?
          .alert.alert-danger.d-flex
            .me-3
              i.fa.fa-exclamation-circle               
            - @booking.errors.delete("tenant.bookings")
            - @booking.errors.delete("occupancies.base")
            = @booking.errors.full_messages.to_sentence
        
        = image_tag current_organisation.logo, class: 'mx-auto d-block m-4', style: 'max-width: 180px; max-height: 180px;' if current_organisation&.logo.present?

        = render partial: 'public/occupiables/select', locals: { booking: @booking, form: f, disabled: false }

        fieldset
          = react_component('calendar/CalendarFormField', label: Booking.human_attribute_name(:begins_at),
                                                      id: 'booking_begins_at',
                                                      name: 'booking[begins_at]',
                                                      value: @booking.begins_at&.iso8601, required: true,
                                                      invalidFeedback: @booking.errors[:begins_at].to_sentence,

          = react_component('calendar/CalendarFormField', label: Booking.human_attribute_name(:ends_at),
                                                      id: 'booking_ends_at',
                                                      name: 'booking[ends_at]',
                                                      value: @booking.ends_at&.iso8601, required: true,
                                                      invalidFeedback: @booking.errors[:ends_at].to_sentence,
          = f.email_field :email
          = f.text_field :tenant_organisation

        .form-actions.mt-3
          - links = { \
              terms_pdf_url: public_designated_document_url(designation: :terms), \
              privacy_statement_pdf_url: privacy_url() \
            }
          = f.check_box :accept_conditions, required: true, label: t('.accept_conditions_html', **links)
          = f.submit t('.submit'), class: 'btn btn-primary btn-lg'

          - if current_organisation.booking_agents.any? 
            button.btn.btn-default.p-0.text-primary.d-block.mt-3#agent-booking-button
              = BookingAgent.model_name.human


  - if current_organisation.email.present?
    p.mt-3.text-center.small== t('.problems_html', email: current_organisation.email)

