= form_with(model: [:manage, organisation], url: manage_organisation_path(org: params[:org]), local: true) do |f|
  = f.fields_for :settings, @organisation.settings || OrganisationSettings.new do |sf|  
    - settings = sf.object

    fieldset
      h3.mt-5= t('.general')
      .card.shadow-sm 
        .card-body
          = f.text_field :slug if current_user.role_admin?
          = f.text_field :name
          div[v-pre]= f.text_area :address, rows: 4
          = f.file_field :logo, help: organisation.logo.present? && organisation.logo.persisted? && image_tag(organisation.logo, width: 120)
          = f.select :locale, organisation.locales.map { [_1.upcase, _1.downcase] }
          = sf.label :locales
          = sf.collection_check_boxes :locales, Organisation.locales.keys.map(&:to_s), :downcase, :upcase, inline: true, skip_label: true
    
    fieldset
      h3.mt-5= Notification.model_name.human(count: 2)
      .card.shadow-sm 
        .card-body
          = f.check_box :notifications_enabled
          = f.email_field :email
          = f.email_field :bcc
          - if current_user.role_admin?
            = f.text_field :mail_from
            div[v-pre]= f.text_area :smtp_settings, rows: 4, value: @organisation.smtp_settings.to_json

    fieldset
      h3.mt-5= Contract.model_name.human(count: 2)
      .card.shadow-sm 
        .card-body
          div[v-pre]= f.text_area :representative_address, rows: 4
          = f.text_field :location
          = f.file_field :contract_signature, help: organisation.contract_signature.attached? && image_tag(organisation.contract_signature, width: 120)
      
    fieldset
      h3.mt-5= Invoice.model_name.human(count: 2)
      .card.shadow-sm 
        .card-body
          = f.select :default_payment_info_type, subtype_options_for_select(PaymentInfo.subtypes), include_blank: true
          = f.text_field :iban
          = f.text_field :esr_ref_prefix
          div[v-pre]= f.text_area :creditor_address, rows: 4, help: t('optional')
          div[v-pre]= f.text_area :account_address, rows: 4, help: t('optional')
    
          - if current_user.role_admin?
          	= f.text_field :invoice_ref_template
            = f.text_field :currency

    fieldset
      h3.mt-5= Tenant.model_name.human(count: 2)
      .card.shadow-sm 
        .card-body
           = sf.check_box :tenant_birth_date_required

    - if current_user.role_admin?
      fieldset
        h3.mt-5= Booking.model_name.human(count: 2)
        .card.shadow-sm 
          .card-body
            = f.text_field :booking_ref_template
            = f.select :booking_flow_type, [BookingFlows::Default].map { [_1.to_s, _1.to_s] }

    fieldset
      h3.mt-5= Occupancy.model_name.human(count: 2)
      .card.shadow-sm 
        .card-body
          = sf.color_field :tentative_occupancy_color, style: 'width: 5em;'
          = sf.color_field :occupied_occupancy_color, style: 'width: 5em;'
          = sf.color_field :closed_occupancy_color, style: 'width: 5em;'

          = sf.text_field :default_begins_at_time, value: settings.default_begins_at_time
          = sf.text_field :default_ends_at_time, value: settings.default_ends_at_time

          = sf.select :default_manage_transition_to_state, settings.manage_transition_to_states(@organisation).map { [_1.t(:label), _1.to_sym] }, value: settings.default_manage_transition_to_state

          = sf.select :default_calendar_view, %i[months year].map { |view| [view, view] }
          = sf.collection_check_boxes :occupied_occupancy_states, BookingStates.occupied_occupancy_able.values, :to_s, ->(state) { state&.t(:label) }

    fieldset
      h3.mt-5= Deadline.model_name.human(count: 2)
      .card.shadow-sm 
        .card-body
          = sf.text_field :unconfirmed_request_deadline, value: settings.unconfirmed_request_deadline&.iso8601
          = sf.text_field :provisional_request_deadline, value: settings.provisional_request_deadline&.iso8601
          = sf.text_field :awaiting_tenant_deadline, value: settings.awaiting_tenant_deadline&.iso8601
          = sf.text_field :overdue_request_deadline, value: settings.overdue_request_deadline&.iso8601
          = sf.text_field :awaiting_contract_deadline, value: settings.awaiting_contract_deadline&.iso8601
          = sf.text_field :deadline_postponable_for, value: settings.deadline_postponable_for&.iso8601
          = sf.text_field :deposit_payment_deadline, value: settings.deposit_payment_deadline&.iso8601
          = sf.text_field :last_minute_warning, value: settings.last_minute_warning&.iso8601
          = sf.text_field :invoice_payment_deadline, value: settings.invoice_payment_deadline&.iso8601
          = sf.text_field :payment_overdue_deadline, value: settings.payment_overdue_deadline&.iso8601
          = sf.text_field :upcoming_soon_window, value: settings.upcoming_soon_window&.iso8601

    - if current_user.role_admin? || true
      fieldset
        .card.shadow-sm.mt-5
          .card-body
            = f.text_area :cors_origins, rows: 3

  .form-actions.pt-4.mt-3
    = f.submit
