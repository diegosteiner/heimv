- if @booking
  - title "#{Booking.model_name.human} #{@booking.to_s} - #{Invoice.model_name.human(count: 2)}"
  = render partial: 'manage/bookings/navigation', locals: { active: :invoices, booking: @booking }
- else 
  h1.my-0= Invoice.model_name.human(count: 2)

  .my-3.d-flex.gap-3
    button.btn.btn-outline-primary.bg-body[type="button" data-bs-toggle="modal" data-bs-target="#filter"]
      i.fa.fa-filter<>
      = t(:filter)

  #filter.modal.fade
    .modal-dialog.modal-lg
      .modal-content 
        = form_with(model: @filter, url: manage_invoices_path, scope: 'filter', method: :GET, local: true) do |f|
          = hidden_field_tag :locale, I18n.locale
          .modal-body
            = render partial: @filter.to_partial_path('filter_fields'), locals: { f: f }
          .modal-footer
            = f.submit t(:filter), class: 'btn btn-primary'

- if @booking && !@booking.committed_request
  .alert.alert-warning[role="alert"]
    p.m-0
      = t('manage.bookings.not_committed_yet')

- if @booking&.invoices&.none?
  p.text-center.my-5
    = t(:no_records_yet, model_name: Invoice.model_name.human(count: 2))
    =<> link_to(t(:add_record, model_name: Invoices::Deposit.model_name.human), new_manage_booking_invoice_path(@booking, invoice: { type: Invoices::Deposit }))
- else
  .table-responsive
    table.table.table-hover.align-middle
      thead
        tr
          - unless @booking
            th= Booking.model_name.human
          th= Invoice.model_name.human
          th= Invoice.human_attribute_name(:type)
          th= Invoice.human_attribute_name(:issued_at)
          th= Invoice.human_attribute_name(:payable_until)
          th= Invoice.human_attribute_name(:amount)
          th= Invoice.human_attribute_name(:amount_paid)
          th= Invoice.human_attribute_name(:amount_open)
          th

      tbody.shadow-sm
        - @invoices.each do |invoice|
          tr[data-href=manage_invoice_path(invoice) class=('disabled' if invoice.discarded?)]
            - unless @booking
              td= link_to invoice.booking, manage_booking_path(invoice.booking)
            td.align-middle
              - if invoice.pdf.attached?
                = link_to manage_invoice_path(invoice, format: :pdf), target: :_blank do
                  = invoice.ref || invoice.payment_ref
                  span.ms-2.fa.fa-print
              - else
                = link_to (invoice.ref || invoice.payment_ref), manage_invoice_path(invoice)
              .small.text-muted 
                = invoice.payment_info&.formatted_ref.presence || invoice.payment_ref
            td.align-middle
              = invoice.model_name.human

            td.align-middle
              - if invoice.issued_at.present?
                = l(invoice.issued_at, format: :date)
              - if invoice.sent?
                span.badge.badge-pill.bg-success.ms-1
                  span.fa.fa-envelope-open.text-white[title="#{Invoice.human_attribute_name(:sent_at)}: #{l(invoice.sent_at)}"]
            td.align-middle
              - if invoice.payable_until.present?
                - if invoice.payable_until.past? && !invoice.paid?
                  .text-danger= l(invoice.payable_until, format: :date)
                  .text-danger= distance_of_time_in_words_to_now(invoice.payable_until)
                - else
                  div=l(invoice.payable_until, format: :date)
                  div= distance_of_time_in_words_to_now(invoice.payable_until)

            td.align-middle
              = number_to_currency(invoice.amount)

            td.align-middle
              = number_to_currency(invoice.amount_paid)

            td.align-middle
              - if invoice.amount_open.negative?
                .text-warning= number_to_currency(invoice.amount_open)
              - elsif invoice.amount_open.zero?
                .text-success= number_to_currency(invoice.amount_open)
              - else
                .text-danger= number_to_currency(invoice.amount_open)

            td.py-1.text-end.align-middle
              - if can?(:manage, invoice)
                .btn-group
                  - unless invoice.discarded?
                    - if invoice.unsettled?
                      = link_to new_manage_booking_payment_path(invoice.booking, payment: { invoice_id: invoice.id }), class: 'btn btn-default'
                        = t(:add_record, model_name: Payment.model_name.human)
                    - unless invoice.is_a?(Invoices::LateNotice)
                      = link_to new_manage_booking_invoice_path(invoice.booking, invoice: { type: Invoices::LateNotice, supersede_invoice_id: invoice.to_param }), class: 'btn btn-default', title: Invoices::LateNotice.model_name.human do
                        span.fa.fa-bell-o
                        
                  = link_to edit_manage_invoice_path(invoice), class: "btn btn-default border-0 p-2" do
                    span.fa.fa-edit
                  = link_to manage_invoice_path(invoice), data: { confirm: t(:confirm) }, method: :delete, class: 'btn btn-default' do
                    span.fa.fa-trash

- if @booking && can?(:manage, @booking)
  #dropdownInvoiceTypes.dropdown.mt-5.d-inline-block
    button#dropdownInvoiceTypesButton.btn.btn-primary.dropdown-toggle aria-expanded="false" aria-haspopup="true" data-bs-toggle="dropdown" type="button" 
      = t(:add_record, model_name: Invoice.model_name.human)
    .dropdown-menu aria-labelledby="dropdownInvoiceTypesButton" 
      - Invoice.subtypes.values.each do |invoice_type|
        = link_to new_manage_booking_invoice_path(@booking, invoice: { type: invoice_type }), class: 'dropdown-item'
          = invoice_type.model_name.human
