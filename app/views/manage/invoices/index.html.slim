- if @booking
  = render partial: 'manage/bookings/navigation', locals: { active: :invoices, booking: @booking }

- if @booking && @booking.invoices.none?
  p.text-center.my-5
    = t(:no_records_yet, model_name: Invoice.model_name.human(count: :other))
    =<> link_to(t(:add_record, model_name: Invoices::Deposit.model_name.human), new_manage_booking_invoice_path(@booking, invoice: { type: Invoices::Deposit }))
- else
  .table-responsive
    table.table.table-hover.table-card
      thead
        tr
          th= Invoice.model_name.human
          th= Invoice.human_attribute_name(:type)
          th= Invoice.human_attribute_name(:payable_until)
          th= Invoice.human_attribute_name(:amount)
          th= Invoice.human_attribute_name(:amount_paid)
          th= Invoice.human_attribute_name(:amount_open)
          th

      tbody
        - @invoices.each do |invoice|
          tr[data-href=manage_invoice_path(invoice) class=('disabled' if invoice.discarded?)]
            td.align-middle
              - unless @booking
                div= link_to invoice.booking, manage_booking_path(invoice.booking)
              small= link_to invoice.ref, manage_invoice_path(invoice, format: :pdf), target: :_blank
            td.align-middle
              = invoice.model_name.human

            td.align-middle
              - if invoice.payable_until.present?
                - if invoice.payable_until.past?
                  .text-danger= l(invoice.payable_until, format: :date)
                - else
                  =l(invoice.payable_until, format: :date)

            td.align-middle
              = number_to_currency(invoice.amount)

            td.align-middle
              = number_to_currency(invoice.amount_paid)

            td.align-middle
              - if invoice.amount_open.negative?
                .text-warning= number_to_currency(invoice.amount_open)
              - elsif invoice.amount_open.zero?
                .text-success= number_to_currency(invoice.amount_open)
              - else
                .text-danger= number_to_currency(invoice.amount_open)

            td.py-1.text-right.align-middle
              - if can?(:manage, invoice)
                .btn-group
                  - unless invoice.paid
                    = link_to new_manage_booking_payment_path(invoice.booking, payment: { invoice_id: invoice.id }), class: 'btn btn-default'
                      = t(:add_record, model_name: Payment.model_name.human)
                  - if invoice.pdf.attached?
                    = link_to manage_invoice_path(invoice, format: :pdf), target: '_blank', class: 'btn btn-default'
                      span.fa.fa-print
                  - unless invoice.discarded?
                    = link_to new_manage_booking_invoice_path(invoice.booking, invoice: { type: Invoices::LateNotice}, supersede_invoice_id: invoice.to_param), class: 'btn btn-default' do
                      span.fa.fa-clone
                    = link_to edit_manage_invoice_path(invoice), class: 'btn btn-default' do
                      span.fa.fa-edit
                    = link_to manage_invoice_path(invoice), data: { confirm: t(:confirm) }, method: :delete, class: 'btn btn-default' do
                      span.fa.fa-trash

- if @booking
  #dropdownInvoiceTypes.dropdown.mt-5.d-inline-block
    button#dropdownInvoiceTypesButton.btn.btn-primary.dropdown-toggle aria-expanded="false" aria-haspopup="true" data-toggle="dropdown" type="button" 
      = t(:add_record, model_name: Invoice.model_name.human)
    .dropdown-menu aria-labelledby="dropdownInvoiceTypesButton" 
      = link_to new_manage_booking_invoice_path(@booking, invoice: { type: Invoices::Deposit }), class: 'dropdown-item'
        = Invoices::Deposit.model_name.human
      = link_to new_manage_booking_invoice_path(@booking, invoice: { type: Invoices::Invoice }), class: 'dropdown-item'
        = Invoices::Invoice.model_name.human
      = link_to new_manage_booking_invoice_path(@booking, invoice: { type: Invoices::LateNotice }), class: 'dropdown-item'
        = Invoices::LateNotice.model_name.human
