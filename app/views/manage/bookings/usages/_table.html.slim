= form_with(url: manage_booking_usages_path(@booking), scope: :usages, method: :PUT, local: true, html: { novalidate: true }) do |f|
  .table-responsive
    table.table.align-middle
      thead
        tr
          th
          th= Tarif.model_name.human
          th= Tarif.human_attribute_name(:price_per_unit)
          th= Tarif.human_attribute_name(:unit)
          th[style="width: 30%;"]= Usage.model_name.human
          th= Usage.human_attribute_name(:price)
          th

      - grouped_usages = usages.group_by { |usage| usage.tarif.tarif_group }
      - grouped_usages.each do |tarif_group, group_usages|
        - collapse_id = "collapse-#{tarif_group&.gsub(/[^[:ascii:]]/, '')&.gsub(%r{[\/\s]}, '_')}"
        - next if group_usages.empty?

        thead
          tr
            th[colspan='9']
              h5
                = tarif_group
                a.badge.rounded-pill.bg-secondary.ms-3[href="##{collapse_id}" data-bs-toggle="collapse"]
                  = group_usages.count

        tbody.collapse.show[id=collapse_id]
          - group_usages.each do |usage|
            = f.fields_for (usage.id || usage.object_id).to_s, usage do |uf|
              tr.bg-white
                td[style="width: 50px;"]
                  small.text-secondary= usage.tarif.ordinal
                td[style="min-width: 30%;"]
                  = uf.hidden_field :id
                  = uf.hidden_field :tarif_id
                  = uf.check_box :_destroy, { checked: uf.object.apply, label: usage.tarif.label, wrapper: { style: 'margin-bottom: 0 !important' } }, '0', '1'
                td
                  = number_to_currency(usage.price_per_unit, unit: '')
                  small.d-block.text-secondary= @booking.organisation.currency
                td
                  = usage.tarif.unit
                  small.d-block.text-secondary= usage.tarif.class.model_name.human
                td
                  = render partial: usage.tarif.template_path('usage_form'), locals: { f: uf, tarif: usage.tarif }
                td
                  = number_to_currency(usage.price, unit: '')
                  small.d-block.text-secondary= @booking.organisation.currency
                td.text-end
                  .btn-group
                    - if !usage.new_record?
                      = link_to edit_manage_booking_usage_path(@booking, usage), class: 'btn btn-default' do
                        span.fa.fa-edit
  .mt-4
    - if can?(:manage, @booking)
      button.btn.btn-secondary[type=:submit name=:commit]
        = t('.save', model_name: Usage.model_name.human)

    = yield
