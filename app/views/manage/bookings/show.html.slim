- title "#{Booking.model_name.human} #{@booking.to_s}"
= render partial: 'manage/bookings/navigation', locals: { booking: @booking } 

- unless @booking.notifications_enabled?
  .alert.alert-warning.my-4[role=alert]= t('manage.bookings.notifications_not_enabled')

- cache(@booking.cache_key) do
  section.row.mt-4
    .col-md-9.mb-4
      .card.shadow-sm
        .card-body
          .row
            .col-md-6
              dl
                dt= Occupancy.model_name.human
                dd= render partial: 'manage/occupancies/occupancy_range', locals: { booking: @booking }

            .col-md-6
              - if @booking.agent_booking.present?
                dl
                  dt= BookingAgent.model_name.human
                  dd= link_to @booking.booking_agent.name, manage_booking_agent_path(@booking.booking_agent)
                  dd= @booking.agent_booking.booking_agent_ref
                  dd= link_to truncate(edit_public_agent_booking_url(@booking.agent_booking.token || @booking.agent_booking.to_param), length: 48, omission: '...'), edit_public_agent_booking_url(@booking.agent_booking.token || @booking.agent_booking.to_param)

          .row
            .col-md-6
              dl
                dt
                  = Booking.human_attribute_name(:tenant)

                  - unless @booking.tenant&.complete?
                    i.fa.fa-exclamation-triangle.text-warning<>[data-bs-toggle="tooltip" title=t('activerecord.errors.models.tenant.incomplete')]

                  - if @booking.tenant&.persisted? && can?(:edit, @booking.tenant) 
                    = link_to edit_manage_tenant_path(@booking.tenant) 
                      i.fa.fa-edit<>
                      
                - if @booking.tenant_organisation.present?
                  dd= @booking.tenant_organisation

                - if @booking.tenant&.persisted?
                  dd
                    = link_to @booking.tenant.full_name, manage_tenant_path(@booking.tenant)
                  dd
                    - @booking.tenant.address_lines.each do |line|
                      = line 
                      br
                  dd= mail_to @booking.tenant.email
                  dd
                    - @booking.tenant.phone&.lines&.each do |phone|
                      = link_to phone, "tel:#{phone}", class: 'd-block'

                  - if @booking.tenant.birth_date.present?
                    dd= l(@booking.tenant.birth_date)


            .col-md-6
              - if @booking.category.present? || @booking.purpose_description.present?
                dl
                  dt= Booking.human_attribute_name(:purpose_description)
                  dd
                    = @booking.purpose_description
                    - if @booking.category
                      = " (#{@booking.category})"
            
              dl
                dt= Booking.human_attribute_name(:approximate_headcount)
                dd= @booking.approximate_headcount

              dl
                dt= Booking.human_attribute_name(:locale)
                dd= @booking.locale

              - if @booking.internal_remarks.present?
                dl 
                  dt= Booking.human_attribute_name(:internal_remarks)
                  dd= @booking.internal_remarks

              - if @booking.remarks.present?
                dl
                  dt= Booking.human_attribute_name(:remarks)
                  dd= @booking.remarks

              dl
                dt= BookingQuestion.model_name.human(count: 2)
                - @booking.booking_question_responses.each do |response|
                  dd.row.mb-0
                    .col-sm-6= response.booking_question.label
                    .col-sm-6
                      - if lookup_context.template_exists? response.booking_question.to_partial_path('value'), [], true
                        em= render partial: response.booking_question.to_partial_path('value'), locals: { value: response.value }
                      - else 
                        em= response.value

      .card.shadow-sm.mt-4
        .card-body
          .row
            .col-md-6
              dl
                dt= Booking.human_attribute_name(:state)
                dd= @booking.booking_state.translate

                - if @booking.deadline.present?
                  dt= Deadline.model_name.human
                  dd= link_to l(@booking.deadline.at, format: :short), edit_manage_deadline_path(@booking.deadline)

            .col-md-6 
              dl 
                dt= t('.public_booking_url')
                dd= link_to truncate(edit_public_booking_url(@booking.token), length: 48, omission: '...'), edit_public_booking_url(@booking.token)

          .row
            .col-md-6
              dl
                dt= t('.checklist')
                dd= render partial: 'manage/bookings/checklist', locals: { booking: @booking }

            .col-md-6
                dl
                  dt
                    = OperatorResponsibility.model_name.human(count: 2)
                    - if(can? :manage, OperatorResponsibility)
                      = link_to(manage_booking_operator_responsibilities_path(@booking), class: 'ms-2')
                        .fa.fa-edit
                  dd
                    = render partial: 'manage/operator_responsibilities/list', locals: { responsibilities: @booking.operator_responsibilities }

          - if can?(:manage, @booking)
            .row.mt-4
              = render partial: 'manage/bookings/booking_actions/buttons', locals: { booking: @booking, form_class: 'col-md-8 d-flex gap-1 mt-2', button_class: proc { |action| "btn btn-outline-#{action.variant}" } }
                      
              .col-md-4.d-flex.gap-1.justify-content-end.mt-2
                = form_with(url: manage_booking_path(@booking), method: :patch, local: true) do |f|
                  .dropdown.d-inline
                    button.btn.btn-outline-primary.dropdown-toggle[type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" value='allowed_transitions']
                      = Booking.human_attribute_name(:transition_to)
                    .dropdown-menu aria-labelledby="dropdownMenuButton"
                      - @booking.booking_flow.allowed_transitions.each do |state|
                        = f.button name: :'booking[transition_to]', value: state, class: 'dropdown-item'
                          = t(:label, scope: [:booking_states, state])

                = link_to edit_manage_booking_path(@booking), class: 'btn btn-primary'
                  span.fa.fa-edit
                  =< t(:edit)
    .col-md-3
      ul.timeline
        - @booking.logs.order(created_at: :desc).each do |log|
          li
            .mb-2.text-muted.text-sm
              time datetime=log.created_at.iso8601 
                = l(log.created_at, format: :short)
            .card.shadow-sm.mb-4
              .card-body

                .mb-2
                  - if log.logged_action.present?
                    - if log.logged_action.respond_to?(:label)
                      strong= log.logged_action.label
                    - elsif log.logged_action.respond_to?(:model_name)
                      strong= log.logged_action.model_name.human
                    - else 
                      strong= log.logged_action.to_s

                  - elsif log.logged_changes.present? 
                      strong= t('.logged_changes', changes: log.logged_changes.keys.map { |klass| klass.model_name.human }.to_sentence)

                ul.list-unstyled
                  - Array.wrap(log.logged_transitions).each do |transition|
                      li= t(:label, scope: [:booking_states, transition])

                .mt-2.text-muted
                  - if log.trigger_tenant?
                    i.fa.fa-user.me-2
                    = Tenant.model_name.human
                  - elsif log.trigger_booking_agent?
                    i.fa.fa-user.me-2
                    = BookingAgent.model_name.human
                    =<> log.booking.agent_booking&.booking_agent&.name 
                  - elsif log.trigger_auto?
                    i.fa.fa-cog.me-2
                    = Booking::Log.human_enum(:trigger, :auto)
                  - elsif log.user 
                    i.fa.fa-user.me-2
                    = log.user.email
          
