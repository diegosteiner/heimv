= form_with(model: [:manage, @booking], novalidate: true) do |f|
  - if @booking.errors.any?
    .alert.alert-danger.pt-4
      = f.error_summary

  fieldset
    h5.mt-0= Booking.human_attribute_name(:occupancy)
    = f.collection_select :home_id, current_organisation.homes.ordered, :id, :to_s, include_blank: true

    = react_component('calendar/CalendarControlGroup', label: Occupancy.human_attribute_name(:begins_at),
                                                id: 'booking_occupancy_begins_at',
                                                name: 'booking[occupancy_attributes][begins_at]', 
                                                value: @booking.occupancy.begins_at&.iso8601, required: true,
                                                invalidFeedback: @booking.errors.filter_map { |error| error.message if error.attribute.start_with?('occupancy.begins_at') }.to_sentence)

    = react_component('calendar/CalendarControlGroup', label: Occupancy.human_attribute_name(:ends_at),
                                                id: 'booking_occupancy_ends_at',
                                                name: 'booking[occupancy_attributes][ends_at]',
                                                value: @booking.occupancy.ends_at&.iso8601, required: true,
                                                invalidFeedback: @booking.errors.filter_map { |error| error.message if error.attribute.start_with?('occupancy.ends_at') }.to_sentence)

    = f.fields_for :occupancy do |of|
        = of.label :color
        = of.check_box :color, { id: 'toggle_booking_occupancy_attributes_color', checked: @booking.occupancy.override_color?, \
                                  data: { 'bs-toggle' => "disable", 'bs-target' => "#booking_occupancy_attributes_color" } }, "1", "" 
          = of.color_field :color, hide_label: true, style: 'min-width: 5em;'

  fieldset.mt-3
    h5.mt-0= Booking.human_attribute_name(:tenant)

    .row
      .col
        = f.hidden_field :tenant_id, id: ''
        = f.collection_select :tenant_id, current_organisation.tenants.ordered, :id, :to_s, { include_blank: true, hide_label: true }, { disabled: true }
      .col-1.d-grid
        input.btn-check[type="checkbox" id="toggle_booking_tenant_id" data-bs-toggle="disable" data-bs-target="#booking_tenant_id"]
        label.btn.btn-default.mb-3 for="toggle_booking_tenant_id" 
          i.fa.fa-unlock

    = f.fields_for :tenant, (@booking.tenant || @booking.build_tenant) do |cf|
      = cf.hidden_field :id
      = f.email_field :email
      = cf.text_field :first_name
      = cf.text_field :last_name
      = cf.text_field :nickname
      = cf.text_field :street_address
      = cf.text_field :address_addon
      .row
        .col-md-4
          = cf.text_field :zipcode
        .col-md-8
          = cf.text_field :city
      = cf.form_group :country_code, label: { text: Tenant.human_attribute_name(:country_code) } do
        = cf.country_select :country_code, { default: "CH", priority_countries: %w[CH DE FR IT] }, class: 'form-control'

      = cf.text_area :phone, rows: 2
      = cf.date_select :birth_date, use_two_digit_numbers: true, start_year: Time.zone.today.year - 75, end_year: Time.zone.today.year - 17, include_blank: true
      = cf.collection_select :locale, Tenant.locales, :first, :first
    = f.text_field :tenant_organisation
    = f.text_area :invoice_address

  fieldset.mt-3
    = f.form_group :committed_request
      = f.label :committed_request, Booking.human_attribute_name(:committed_request)
      = f.radio_button :committed_request, false, label: t(:'activerecord.enums.booking.committed_request.provisional_request'), checked: @booking.committed_request.blank?
      = f.radio_button :committed_request, true, label: t(:'activerecord.enums.booking.committed_request.definitive_request')
      - @booking.errors[:committed_request].each do |error|
        .invalid-feedback.d-block = error

      - if @booking.home&.bookable_extras&.any?
        .my-3
          .mb-2= Booking.human_attribute_name(:bookable_extra_ids)
          = f.collection_check_boxes_without_bootstrap(:bookable_extra_ids, @booking.home.bookable_extras, :id, :title) do |option|
            - id = "input-bookable-extra-#{option.object.id}"
            .form-check
              = option.check_box class: "form-check-input", id: id
              = option.label class: "form-check-label", for: id

    = f.collection_select :booking_category_id, current_organisation.booking_categories, :id, :title, include_blank: true
    = f.text_field :purpose_description
    = f.number_field :approximate_headcount
    = f.text_area :remarks
    = f.text_area :internal_remarks
    = f.text_area :cancellation_reason
    = f.check_box :notifications_enabled
    = f.check_box :editable

  fieldset.mt-3
    h5.mt-0= AgentBooking.model_name.human
    = f.fields_for :agent_booking do |af|
      = af.text_field :booking_agent_code
      = af.text_field :booking_agent_ref

  .form-actions.pt-4.mt-3
    = f.submit
    - unless @booking.new_record?
      =<> link_to t(:back), manage_booking_path(@booking), class: 'btn btn-default'
