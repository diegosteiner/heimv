section.breakout-sm
  .card
    .card-body
      p
        span.badge.badge-info
          = t(booking.state, scope: 'activerecord.values.booking.state') if booking.state

      p
        = render partial: 'manage/occupancies/occupancy_range', locals: { occupancy: booking.occupancy }

      p
        strong= Booking.human_attribute_name(:home)
        br
        = link_to booking.home, manage_home_path(booking.home)
      p
        strong= Booking.human_attribute_name(:customer)
        br
        = link_to booking.customer, manage_customer_path(booking.customer)


      hr

      - @booking.state_machine.allowed_transitions.each do |state|
        '
        = link_to manage_booking_path(booking, booking: { transition_to: state }), method: :patch, class: 'btn btn-primary' do
          = @booking.booking_strategy::ViewModel.i18n_transition(@booking.state_machine.current_state, state)[:label]

      = link_to edit_manage_booking_path(booking), class: 'btn btn-default'
        span.fa.fa-pencil
      '
      / = link_to manage_booking_path(booking), data: { confirm: t(:confirm) }, method: :delete, class: 'btn btn-danger', title: t(:destroy) do
      /   span.fa.fa-trash
      /   '
      /   = t(:destroy)
