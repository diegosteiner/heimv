- unless bookings && bookings.any?
  p.mb-5= t(:no_records_yet, model_name: Booking.model_name.human(count: :other))

- else
  - bookings.each do |booking|
    - cache(booking) do
      .row.m-0.bg-white.border[data-href=manage_booking_path(booking) data-id=booking.to_param]
        .col-lg-2
          .d-flex.p-2.h-100[style="align-items: center;"]
            = link_to manage_booking_path(booking), class: 'd-block'
              h5.m-0.text-center= booking.ref
        .col-md-4.col-lg-3.py-3
          = link_to manage_booking_path(booking)
            = render partial: 'manage/occupancies/occupancy_range', locals: { occupancy: booking.occupancy }
          = link_to manage_home_path(booking.home)
            .d-flex.mt-2
              div.mr-2
                i.fa.fa-home
              div
                = booking.home

          .d-flex.mt-2
            div.mr-2
              i.fa.fa-male
            div
              - if booking.approximate_headcount
                span=<> booking.approximate_headcount

              - if booking.purpose.present?
                span=<> "(#{booking.purpose})"
        .col-md-4.col-lg-3.py-3.d-block.overflow-x-hidden
          - if booking.tenant.present?
            small= Tenant.model_name.human
            p.m-0=link_to booking.tenant.name, manage_tenant_path(booking.tenant), { 'v-b-popover.hover.html' => JSON.generate(tenant_address(booking.tenant).to_s)  }
            p.m-0= booking.tenant_organisation.presence
          - if booking.agent_booking?
              small= BookingAgent.model_name.human
              p.m-0=link_to booking.agent_booking.booking_agent, manage_booking_agent_path(booking.booking_agent)
              p.m-0= booking.agent_booking.booking_agent_ref

        .col-md-3.py-3
          p.mb-1
            - if booking.booking_state.relevant_time.present? 
              i.fa.fa-clock-o 
              =<> booking.booking_state.t(:relevant_time, time: l(booking.booking_state.relevant_time))
          = render partial: 'manage/bookings/checklist', locals: { booking: booking }

        .col-md-1
          .dropdown.d-block.w-100.h-100
            button.btn.btn-default.w-100.h-100[data-toggle="dropdown" type="button"]
              i.fa.fa-angle-down
            .dropdown-menu.dropdown-menu-right
              = form_with(url: manage_booking_path(booking), method: :patch, local: true) do |f|
                - cache booking do 
                  - BookingActions::Manage.all.values.each do |action_klass|
                    - action = action_klass.new(booking: booking)
                    - next unless action.allowed?

                    button[type="submit" name='booking_action' value=action.to_s  class="dropdown-item text-#{action.button_options[:variant]}"]
                      = action.translate
              .dropdown-divider
              = link_to t(:show), manage_booking_path(booking), class: 'dropdown-item'
              = link_to t(:edit), edit_manage_booking_path(booking), class: 'dropdown-item'
