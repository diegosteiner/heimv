.calendarDay > button {
  border: 1px solid transparent;
  // color: foregroundColorFor($color1);
  background: transparent;

  $occpancyTypesBaseColors: (
    occupied: #e85f5f,
    // tentative: #e8bc56,
    tentative: #14a1ff,
    closed: rgba(146, 146, 146, 0.808),
  );

  @function foregroundColorFor($color) {
    @return desaturate(darken($color, 25%), 20%);
  }

  @function backgroundColorFor($color) {
    @return saturate(lighten($color, 15%), 0%);
  }

  @mixin dividedDay($color1, $color2) {
    border-top-color: $color1;
    border-left-color: $color1;
    border-bottom-color: $color2;
    border-right-color: $color2;
    background: linear-gradient(
      135deg,
      backgroundColorFor($color1) 49%,
      white 49%,
      white 51%,
      backgroundColorFor($color2) 51%
    );
  }

  @each $occupancyType1 in map-keys($occpancyTypesBaseColors) {
    $color1: map-get($occpancyTypesBaseColors, $occupancyType1);

    &.#{$occupancyType1}-forenoon,
    &.#{$occupancyType1}-afternoon,
    &.#{$occupancyType1}-fullday {
      border: 1px solid $color1;
      font-weight: bold;
      color: foregroundColorFor($color1);
    }

    &.#{$occupancyType1}-fullday {
      background: backgroundColorFor($color1);
    }

    &.#{$occupancyType1}-forenoon {
      @include dividedDay($color1, white);
    }

    &.#{$occupancyType1}-afternoon {
      @include dividedDay(white, $color1);
    }

    @each $occupancyType2 in map-keys($occpancyTypesBaseColors) {
      $color2: map-get($occpancyTypesBaseColors, $occupancyType2);

      &.#{$occupancyType1}-forenoon.#{$occupancyType2}-afternoon,
      &.#{$occupancyType1}-forenoon.#{$occupancyType2}-fullday {
        @include dividedDay($color1, $color2);
      }
    }
  }
}
