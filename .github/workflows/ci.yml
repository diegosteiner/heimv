---
name: Continous Integration - CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: update version
        run: |
          if [ "${GITHUB_REF_TYPE}" == "tag" ]; then
            echo "${GITHUB_REF_NAME}" > VERSION
          else
            ref=$(echo ${GITHUB_REF#refs/heads/})
            sha=$(echo ${GITHUB_SHA} | cut -c1-7)
            echo "${ref} @${sha}" > VERSION
          fi

      - name: docker build
        run: | 
          docker pull ghcr.io/diegosteiner/heimv:develop
          docker compose --file docker-compose.ci.yml build
          docker save -o heimv-e2e_test.tar heimv-e2e_test
          docker save -o heimv-e2e_target.tar heimv-e2e_target

      - name: upload image test 
        uses: actions/upload-artifact@v4
        with:
          name: heimv-e2e_test
          path: heimv-e2e_test.tar

      - name: upload image target 
        uses: actions/upload-artifact@v4
        with:
          name: heimv-e2e_target
          path: heimv-e2e_target.tar
    
  check:
    runs-on: ubuntu-latest
    needs: 
      - build
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: download images
        uses: actions/download-artifact@v4
        with:
          name: heimv-e2e_target

      - name: download images
        uses: actions/download-artifact@v4
        with:
          name: heimv-e2e_test

      - name: load images
        run: |
          docker load -i heimv-e2e_test.tar
          docker load -i heimv-e2e_target.tar

      - name: run specs
        run: docker compose --file docker-compose.ci.yml run e2e_test bin/check_ci
      
      - name: migrate database
        run: |
          docker compose --file docker-compose.ci.yml run e2e_target DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bin/rails db:environment:set RAILS_ENV=production
          docker compose --file docker-compose.ci.yml run e2e_target DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bin/rails db:drop db:create db:migrate

      - name: run e2e specs
        run: docker compose --file docker-compose.ci.yml run e2e_test bin/rspec ./spec --tag @type:feature || exit 1

      - name: stop target
        run: docker compose --file docker-compose.ci.yml down --remove-orphans

      - if: failure()
        name: prepare artifacts
        run: | 
          mkdir -p artifacts
          docker compose --file docker-compose.ci.yml logs > ./artifacts/docker-compose.ci.log
          docker cp $(docker compose --file docker-compose.ci.yml ps -qa e2e_test | head -n1):/rails/tmp ./artifacts/tmp

      - if: failure()
        name: upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: artifacts
          path: artifacts

  push:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: 
      - build
      - check
    env:
      IMAGE_TAG: "ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: buildx
        uses: docker/setup-buildx-action@master

      - name: docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: download images
        uses: actions/download-artifact@v4
        with:
          name: heimv-e2e_target

      - name: load images
        run: |
          docker load -i heimv-e2e_target.tar

      - name: push image
        run: |
          docker tag heimv-e2e_target $IMAGE_TAG
          docker push $IMAGE_TAG
