name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ env.cache-name }}-
            ${{ runner.os }}-npm-

      - run: mkdir -p vendor/cache node_modules artifacts

      # - name: Build test container
      #   run: docker-compose -f docker-compose.yml -f .github/docker-compose.yml build e2e_test

      - name: Prepare Database
        if: success()
        run: docker-compose -f docker-compose.yml -f .github/docker-compose.yml run e2e_test bin/rails db:drop db:create db:migrate

      - name: Build and start e2e
        if: success()
        run: docker-compose -f docker-compose.yml -f .github/docker-compose.yml up -d e2e_target

      - name: Run check
        if: success()
        run: docker-compose -f docker-compose.yml -f .github/docker-compose.yml run e2e_test bin/check

      - if: failure()
        run: docker-compose -f docker-compose.yml -f .github/docker-compose.yml logs e2e_target > ./artifacts/e2e_target.log

      - if: failure()
        run: cp -r tmp/capybara ./artifacts/

      - uses: actions/upload-artifact@master
        if: failure()
        with:
          name: artifacts
          path: artifacts

      # - uses: actions-hub/docker/login@master
      #   if: success()
      #   env:
      #     DOCKER_USERNAME: ${{ github.actor }}
      #     DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      #     DOCKER_REGISTRY_URL: docker.pkg.github.com

      # - name: Tag image
      #   if: success() && !github.base_ref
      #   run: docker tag heimv:latest docker.pkg.github.com/diegosteiner/heimv/heimv:${GITHUB_REF##*/}

      # - name: Push to docker hub :latest
      #   if: success() && !github.base_ref
      #   uses: actions-hub/docker@master
      #   with:
      #     args: push docker.pkg.github.com/diegosteiner/heimv/heimv:${GITHUB_REF##*/}
